//ModelGroupReport.java: Class file for WO Component 'ModelGroupReport'

/*
 * Copyright (c) 2008, Gennady & Michael Kushnir
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 * 	•	Redistributions of source code must retain the above copyright notice, this
 * 		list of conditions and the following disclaimer.
 * 	•	Redistributions in binary form must reproduce the above copyright notice,
 * 		this list of conditions and the following disclaimer in the documentation
 * 		and/or other materials provided with the distribution.
 * 	•	Neither the name of the RUJEL nor the names of its contributors may be used
 * 		to endorse or promote products derived from this software without specific 
 * 		prior written permission.
 * 		
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package net.rujel.reusables;

import com.webobjects.appserver.*;
import com.webobjects.eoaccess.*;
import com.webobjects.eocontrol.EOEditingContext;
import com.webobjects.eocontrol.EOSortOrdering;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSDictionary;

// Generated by the WOLips Templateengine Plug-in at Jun 30, 2009 1:39:37 PM
public class ModelGroupReport extends com.webobjects.appserver.WOComponent {
	
	public EOEditingContext ec;
	public EOModelGroup modelGroup = EOModelGroup.defaultGroup();
	public EOModel model;
	public EOEntity entity;
	public EOProperty prop;
	public EOJoin join;
	
    public ModelGroupReport(WOContext context) {
        super(context);
    }
    
    public NSArray models() {
        EOSortOrdering so = new EOSortOrdering("name",
        		EOSortOrdering.CompareCaseInsensitiveAscending);
        return EOSortOrdering.sortedArrayUsingKeyOrderArray
        		(modelGroup.models(), new NSArray(so));
    }
    
    public String modelUrl() {
    	if(model == null)
    		return null;
    	NSDictionary cd = null;
    	if(ec != null) {
    		try {
				ec.lock();
				EODatabaseContext dc = EODatabaseContext.
								registeredDatabaseContextForModel(model, ec);
				cd =  dc.adaptorContext().adaptor().connectionDictionary();
			} catch (RuntimeException e) {

			} finally {
				ec.unlock();
			}
    	}
    	if(cd == null)
    		cd = model.connectionDictionary();
    	return (String)cd.valueForKey("URL");
    }
    
    public String anchorHref() {
    	if(model == null)
    		return null;
    	return "#" + model.name();
    }
    
    public String style() {
    	if(entity == null)
    		return null;
    	boolean hidden = false;
//    	String className = entity.className();
    	if(prop == null) {
    		hidden = entity.className().endsWith("EOGenericRecord");
    	} else {
    		try {
				hidden = !entity.classProperties().contains(prop);
			} catch (RuntimeException e) {
				return "font-style:italic;color:#ff9999;";
			}
    	}
    	if(hidden)
    		return "color:#999999;";
    	return null;
    }
    
    public String scale() {
    	if(!(prop instanceof EOAttribute))
    		return null;
    	EOAttribute attr = (EOAttribute)prop;
    	if(attr.width() > 0)
    		return Integer.toString(attr.width());
    	if(attr.precision() == 0)
    		return null;
    	if(attr.scale() == 0)
    		return Integer.toString(attr.precision());
    	StringBuilder buf = new StringBuilder(8);
    	buf.append(attr.precision()).append('.').append(attr.scale());
    	return buf.toString();
    }
    
    public String modelVersion() {
    	NSDictionary modelInfo = model.userInfo();
		if(modelInfo != null)
			modelInfo = (NSDictionary)modelInfo.valueForKey("schemaVersion");
		if(modelInfo == null)
			return null;
		StringBuilder buf = new StringBuilder("<strong>v");
		buf.append(modelInfo.valueForKey("number"));
		buf.append("</strong> (").append(modelInfo.valueForKey("title")).append(')');
		return buf.toString();
    }
}